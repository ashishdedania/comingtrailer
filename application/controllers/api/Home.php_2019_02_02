<?php

defined('BASEPATH') OR exit('No direct script access allowed');

require(APPPATH . 'libraries/REST_Controller.php');

class Home extends REST_Controller {

    function __construct() {
        parent::__construct();
        $printarray = array();
        $err_code = CODE_INVALID_SERVICE;
        $message = "";
        $result = false;
        $this->auth = new stdClass;
        $this->load->helper('cookie');
//        $this->load->model('api/common_model');
    }

    function data_post() {
        $language = $this->input->post('language');
        if (!isset($language)) {
            $message = 'Invalid api call or parameter missing.';
            $err_code = CODE_PARAM_MISSING;
            $result = false;
        } else {
            $FrontData = array();
            if (!empty($language)) {
                $condition = "where LOWER(subcat_name) in ('" . str_replace(",", "','", $language) . "')";
            }
            $main_category = array(1 => "Trailer", 2 => "Video Song");
            $sub_category = $this->My_model->getresult("SELECT * from sub_category " . $condition);
            $temp = 0;
            foreach ($main_category as $Mainkey => $Mainvalue) {
                foreach ($sub_category as $key => $value) {
                    $result = $this->My_model->getresult("SELECT video.id as id,sub_category.subcat_name,video.video_name,
                    CONCAT('timthumb.php?src=" . base_url() . "images/videothumb/',video.video_thumb,'&w=285&h=160') as video_thumb,
                    CONCAT('" . base_url() . "images/videothumb/',video.video_thumb) as thumb,
                    CONCAT(video.liked,' Likes') as liked,CONCAT(video.play,' Playing') as play,video_url.final_url FROM video 
                    LEFT JOIN sub_category ON video.subcat_id=sub_category.id
                    LEFT JOIN video_url ON video_url.id=video.seo_url_id 
                    WHERE cat_id='" . $Mainkey . "' AND subcat_id='" . $value['id'] . "' AND    
                    video.is_deleted='0'
                    group by video.id
                    ORDER BY video.rel_date DESC
                    LIMIT 0," . API_RECORD_LIMIT . "");

                    if ($Mainkey == 1) {
                        $url = base_url() . "movietrailer/";
                    } else {
                        $url = base_url() . "videosong/";
                    }

                    $FrontData[$temp]["name"] = $value['subcat_name'] . " " . $Mainvalue;
                    $FrontData[$temp]["value"] = $result;
                    $temp++;
                }
            }

            foreach ($sub_category as $key => $value) {
                $result = $this->My_model->getresult("SELECT poster.id as id,sub_category.subcat_name,"
                        . "poster.poster_name as video_name,CONCAT(poster.likes,' Likes') as liked,"
                        . "CONCAT(poster.views,' Views') as play,video_url.final_url,"
                        . "(select CONCAT('timthumb.php?src=" . base_url() . "images/poster/',poster_img.poster_image,'&w=285&h=160') from poster_img where poster_img.poster_id=poster.id order by poster_img.poster_type asc,poster_img.display_order asc limit 1) as video_thumb,
                            (select CONCAT('" . base_url() . "images/poster/',poster_img.poster_image) from poster_img where poster_img.poster_id=poster.id order by poster_img.poster_type asc,poster_img.display_order asc limit 1) as thumb
                        FROM poster 
                LEFT JOIN sub_category ON poster.subcat_id=sub_category.id
                LEFT JOIN video_url ON video_url.id=poster.seo_url_id                 
                WHERE subcat_id='" . $value['id'] . "' AND    
                poster.is_deleted='0'
                group by poster.id                
                ORDER BY poster.rel_date DESC
                LIMIT 0," . API_RECORD_LIMIT . "");
                $url = base_url() . "movieposter/";
                $FrontData[$temp]["name"] = $value['subcat_name'] . " Poster";
                $FrontData[$temp]["value"] = $result;
                $temp++;
            }
            $printarray['data'] = $FrontData;
            $message = '';
            $err_code = CODE_OK;
            $result = true;
        }
        $printarray['result'] = $result;
        $printarray['message'] = $message;
        $printarray['errorCode'] = $err_code;
        $this->response($printarray);
    }

    function video_post() {
        $language = $this->input->post('language');
        $page = $this->input->post('page');
        $type = $this->input->post('type');
        $sub_type = $this->input->post('sub_type');
        $is_trending = $this->input->post('is_trending');
        if (!isset($language) || !isset($type)) {
            $message = 'Invalid api call or parameter missing.';
            $err_code = CODE_PARAM_MISSING;
            $result = false;
        } else {
            $condition = '';
            $order = 'video.rel_date DESC ';
            $offset = (isset($page) && $page > 0) ? ($page * API_RECORD_LIMIT) : 0;
            $limit = " LIMIT $offset," . API_RECORD_LIMIT . "";
            if ($type == 'trailer') {
                $Mainkey = 1;
            } else if ($type == 'video') {
                $Mainkey = 2;
                if (isset($sub_type) && $sub_type == 2) {
                    $condition = "(select count(video_map_movie.id) from video_map_movie where video_id = video.id and movie_id is not null) > 0 ";
                }
            }

            if ($is_trending == 1) {
                $condition = ' and date(video.created) > date("' . date('Y-m-d', strtotime("-30 days")) . '")';
                $order = 'video.youtube_views DESC ';
            }
            $FrontData = array();
            $sub_category = $this->My_model->getresult("SELECT * from sub_category where LOWER(subcat_name) = '" . strtolower($language) . "'");
            $temp = 0;
            foreach ($sub_category as $key => $value) {
                $result = $this->My_model->getresult("SELECT video.id as id,sub_category.subcat_name,video.video_name,
                    CONCAT('timthumb.php?src=" . base_url() . "images/videothumb/',video.video_thumb,'&w=285&h=160') as video_thumb,
                    CONCAT('" . base_url() . "images/videothumb/',video.video_thumb) as thumb,
                    CONCAT(video.liked,' Likes') as liked,CONCAT(video.play,' Playing') as play,video_url.final_url FROM video 
                    LEFT JOIN sub_category ON video.subcat_id=sub_category.id
                    LEFT JOIN video_url ON video_url.id=video.seo_url_id 
                    WHERE cat_id='" . $Mainkey . "' AND subcat_id='" . $value['id'] . "' AND    
                    video.is_deleted='0' " . $condition . "
                    group by video.id
                    ORDER BY $order
                    " . $limit . "");

                if ($Mainkey == 1) {
                    $url = base_url() . "movietrailer/";
                } else {
                    $url = base_url() . "videosong/";
                }
                $FrontData = $result;
            }

            $printarray['data'] = $FrontData;
            $message = '';
            $err_code = CODE_OK;
            $result = true;
        }
        $printarray['result'] = $result;
        $printarray['message'] = $message;
        $printarray['errorCode'] = $err_code;
        $this->response($printarray);
    }

    function personality_post() {
        $occupation = $this->input->post('occupation');
        $page = $this->input->post('page');
        if (!isset($occupation) && !in_array($occupation, array('cast', 'singer', 'director', 'music_director', 'channel'))) {
            $message = 'Invalid api call or parameter missing.';
            $err_code = CODE_PARAM_MISSING;
            $result = false;
        } else {
            $offset = (isset($page) && $page > 0) ? ($page * API_RECORD_LIMIT) : 0;
            $limit = " LIMIT $offset," . API_RECORD_LIMIT . "";
            if ($occupation != 'channel') {
                $result = $this->My_model->getresult("SELECT personality.id as id,personality_name as name,personality_title as title,
                    personality_desc as description, personality_keywords as keywords,
                    CONCAT('timthumb.php?src=" . base_url() . "images/personality/',personality.personality_img,'&w=285&h=160') as personality_thumb,
                    CONCAT('" . base_url() . "images/personality/',personality.personality_img) as thumb
                    FROM personality                     
                    WHERE status = 0 and is_" . $occupation . " = 1                     
                    " . $limit . "");
            } else {
                $result = $this->My_model->getresult("SELECT released_by.id as id,rel_by_name as name,rel_by_title as title,
                    rel_by_desc as description, rel_by_keywords as keywords,
                    CONCAT('timthumb.php?src=" . base_url() . "images/channel/',released_by.rel_by_img,'&w=285&h=160') as released_by_thumb,
                    CONCAT('" . base_url() . "images/channel/',released_by.rel_by_img) as thumb
                    FROM released_by                     
                    WHERE status = 0 and is_" . $occupation . " = 1                     
                    " . $limit . "");
            }
            $printarray['data'] = $result;
            $message = '';
            $err_code = CODE_OK;
            $result = true;
        }
        $printarray['result'] = $result;
        $printarray['message'] = $message;
        $printarray['errorCode'] = $err_code;
        $this->response($printarray);
    }
    
    function poster_post() {
        $language = $this->input->post('language');
        $page = $this->input->post('page');                
        if (!isset($language)) {
            $message = 'Invalid api call or parameter missing.';
            $err_code = CODE_PARAM_MISSING;
            $result = false;
        } else {            
            $offset = (isset($page) && $page > 0) ? ($page * API_RECORD_LIMIT) : 0;
            $limit = " LIMIT $offset," . API_RECORD_LIMIT . "";
                       
            $FrontData = array();
            $sub_category = $this->My_model->getresult("SELECT * from sub_category where LOWER(subcat_name) = '" . strtolower($language) . "'");
            
            foreach ($sub_category as $key => $value) {
                $result = $this->My_model->getresult("SELECT poster.id as id,sub_category.subcat_name,"
                        . "poster.poster_name as video_name,CONCAT(poster.likes,' Likes') as liked,"
                        . "CONCAT(poster.views,' Views') as play,video_url.final_url,"
                        . "(select CONCAT('timthumb.php?src=" . base_url() . "images/poster/',poster_img.poster_image,'&w=285&h=160') from poster_img where poster_img.poster_id=poster.id order by poster_img.poster_type asc,poster_img.display_order asc limit 1) as video_thumb,
                            (select CONCAT('" . base_url() . "images/poster/',poster_img.poster_image) from poster_img where poster_img.poster_id=poster.id order by poster_img.poster_type asc,poster_img.display_order asc limit 1) as thumb
                        FROM poster 
                LEFT JOIN sub_category ON poster.subcat_id=sub_category.id
                LEFT JOIN video_url ON video_url.id=poster.seo_url_id                 
                WHERE subcat_id='" . $value['id'] . "' AND    
                poster.is_deleted='0'                
                group by poster.id                
                ORDER BY poster.rel_date DESC
                LIMIT 0," . API_RECORD_LIMIT . "");                
                
                $FrontData = $result;                
            }

            $printarray['data'] = $FrontData;
            $message = '';
            $err_code = CODE_OK;
            $result = true;
        }
        $printarray['result'] = $result;
        $printarray['message'] = $message;
        $printarray['errorCode'] = $err_code;
        $this->response($printarray);
    }
    
    function movie_post() {
        
    }

}
